@model Applabs_Demo.Models.Marketing


@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm("Save","Marketing"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Marketing</h4>
        <hr />
        @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
            </div>
        </div>*@


        <div class="form-group">
            @Html.LabelFor(model => model.Employee_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Employee_Name, new SelectList(ViewBag.teja, "Value", "Text"), "Select Marketer", new { @class = "text-danger" })
               @* @Html.EditorFor(model => model.Employee_Name, new { htmlAttributes = new { @class = "form-control" } })*@
                 @* @Html.DropDownList("teja", ViewBag("teja")as SelectList ,"All Employees")*@
               @* @Html.DropDownList("teja", ViewData["teja"] as IEnumerable<SelectListItem>, "(none)")*@
              
                @*@Html.DropDownListFor(model => Model.Employee_Name, new SelectList(ViewBag.teja,"Value","Text"),"Select Employee")*@
                @Html.ValidationMessageFor(model => model.Employee_Name, "", new { @class = "text-danger" })


                @* @Html.DropDownList("teja"," Select Employee")*@


                @*  @Html.DropDownList("teja", IEnumerable<ViewBag.teja>, "Select employee")*@
                @*@Html.DropDownList("Employee", "Select Employee")*@

                @*@Html.DropDownList("teja", ((SelectList)ViewData["teja"]).Items, "(none)") %> DropDownList takes IEnumerable<SelectListItem>*@
                @* @Html.DropDownList("ViewBag.teja", ViewBag.teja as IEnumerable<SelectListItem>, "(none)")*@
                @*@Html.DropDownList("Emp,")
                    @Html.DropDownList("Emp", ViewBag.Emp as SelectList, new { @class = "form-data" })*@
                @* @Html.DropDownList("Emp", ((SelectList)ViewData["emp"]).Items,"(none)")*@
                @* @Html.DropDownListFor(R => R.Employee_Name,null, "Select the Employee")*@
                @*  @Html.DropDownList("Emp",null,"Select Employee")*@
                @* @Html.EditorFor(model => model.Employee_Name, new { htmlAttributes = new { @class = "form-control" } })*@

            </div>
        </div>

        <div class="form-group">
                @Html.LabelFor(model => model.Marketer_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Marketer_name,new SelectList(ViewBag.marketingem,"Value","Text"),"Select Marketer", new { @class = "text-danger" })
                @*@Html.EditorFor(model => model.Marketer_name, new { htmlAttributes = new { @class = "form-control" } })*@
               @* @Html.DropDownListFor(model => Model.Marketer_name, new SelectList(ViewBag.marketingem,"value","Text"),"Select Marketer", new { @class = "form-control" })*@
                @*   @Html.DropDownList("marketingem","select Employee")*@
                @* @Html.DropDownList("Marketingemp",null,"Select Marketer",new { @class="Form-Control"})*@
                @* @Html.EditorFor(model => model.Marketer_name, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Marketer_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Start_date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Start_date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Start_date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.case_status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("Case Status", new List<SelectListItem>{
                    new SelectListItem {Text="Open",Value="Open"},

                }, "Select Case Status ")*@
                @Html.EditorFor(model => model.case_status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.case_status, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Close_date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Close_date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Close_date, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
